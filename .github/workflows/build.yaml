name: CI CD

on:
  push:
    branches: "**"

# https://medium.com/alterway/building-a-ci-cd-pipeline-for-a-spark-project-using-github-actions-sbt-and-aws-s3-part-1-c7d43658832d

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '11'
          cache: 'gradle'
      - name: Setup Gradle 7.6
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.6
      - run: gradle assemble
      - name: Setup caches
        uses: actions/cache@v3
        with:
          path: |
            ~/build/libs
          key: ${{ runner.os }}-build-${{ hashFiles('build/libs/*.jar') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ hashFiles('build/libs/*.jar') }}

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '11'
          cache: 'gradle'
      - name: Setup Gradle 7.6
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.6
      - name: Running Unit Tests
        run: gradle check
  # https://github.com/aws-actions/configure-aws-credentials
  deploy:
    name: Upload to Amazon S3
    needs: build
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::980574647228:role/mahen-github-s3-copy-action
          aws-region: us-west-2
      - name: Copy files to the test website with the AWS CLI
        run: |
          ls -lrt
          ls -lrRt build
          aws s3 ls s3://mahendran-dev-data
          aws s3 sync build/libs s3://mahendran-dev-data/libs
